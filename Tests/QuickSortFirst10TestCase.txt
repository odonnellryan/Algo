int middleIndex;
                int size = (rightIndex - leftIndex) + 1;
                if (size < 3)
                {
                    return;
                }
                if (size % 2 != 0)
                {
                    middleIndex = leftIndex + ((size - 1) / 2);
                }
                else
                {
                    middleIndex = leftIndex + ((size / 2) - 1);
                }
                List<int> list = new List<int>() { unsortedList[rightIndex], unsortedList[leftIndex], unsortedList[middleIndex] };

                list.Sort();

                int index = unsortedList.IndexOf(list[1]);

                Swap(ref unsortedList, leftIndex, index);
                return;
            }
            if (testCase == "right") {
                Swap(ref unsortedList, leftIndex, rightIndex);
                return;
            }3
9
8
4
6
10
2
5
7
1